### http://greenback.gremlin.net/trigfuncs.awk
%%% function pow(a, b) {return a^b}
%%% function abs(x)  { return x<0?x*-1:x}
%%% function asin(x) { return atan2(x, sqrt(abs(1-x*x))) }
%%% function acos(x) { return atan2(sqrt(abs(1-x*x)), x)}
%%% function pi() { return 2*asin(1)}
%%% function todeg(rad) { return rad*360/(2*pi())}
%%% function a2v_sphere(A,  V0, A0) {
%%%       V0 = 4/3*pi()
%%%       A0 = 4*pi()
%%%       return (A^(3/2)*V0)/A0^(3/2)              * 1.3
%%%    }
%%% function a2v_rbc(A,  V0, A0) {
%%%       V0 = 91
%%%       A0 = 135 # page 54 Fedosov2010
%%%       return (A^(3/2)*V0)/A0^(3/2)
%%%    }
%%% function a2v(A) {
%%%       if (cshape == SPHERE)
%%%          return a2v_sphere(A)
%%%       elseif (cshape == RBC)
%%%          return a2v_rbc(A)
%%% }
%%% function init() {
%%%    SPHERE = 0; RBC = 1   # shapes
%%%    lunit = 1e-6          # definitions from the code
%%%    tunit = 2.4295e-6
%%%    lrbc  = 1.000000e-06
%%%    trbc  = 3.009441e-03
%%%    ll    = lunit / lrbc
%%%    tt    = tunit / trbc
%%%    kBT_rb = 580 * 250 * pow(ll, -2) * pow(tt, 2)

%%%    dx     = 1/nd^(1/3)           # DPD particles spacing
%%%    l0     = 0.89*dx              # 0.9 for uDeviceX
%%%
%%%    Nt    = 2*Nv - 4                         # number of triangles
%%%    totArea0 = Nt * sqrt(3)/4 * l0^2         # (3.30) in Fedosov2010
%%%    totVolume0 = a2v(totArea0)

%%%    lmax = 2.2*l0                            # page 94 in Fedosov2010
%%%    x0   = l0/lmax
%%%    p = (sqrt(3)*lunit^2 \
%%%            *(16*lunit^3*x0^3-51*lrbc*lunit^2*x0^2+57*lrbc^2*lunit*x0 \
%%%                             -24*lrbc^3)*kBT) \
%%%  /(16*lmax*lrbc^2*mu0*(lunit*x0-lrbc)^3)   # solve (B.5) in
					       # Fedosov2010 for `p'
%%%
%%%    cq = (3^(3/2)*l0^4*lunit^4* \
%%%	       (4*l0^2*lunit^2-9*l0*lmax*lrbc*lunit+6*lmax^2*lrbc^2)) \
%%%           /(32*lmax*lrbc^4*(l0*lunit-lmax*lrbc)^2*p) # parameters.CTC/RBC/3d/rbc-udevice.mac,
%%%							 # similar to
%%%							 # (3.4) in
%%%							 # Fedosov2010
%%% }
%%%
%%% function box_l0() {
%%%     # not implimented
%%%     exit 2
%%% }
%%% 
%%% function box_l1() {
%%%     rx=14; ry=5; rz=1
%%%     XS=80; YS=52; ZS=28
%%% }
%%% 
%%% function box_l2() {
%%%     rx=5; ry=1; rz=1
%%%     XS=56; YS=64; ZS=8
%%% }
%%%
%%% function box() {
%%%    if      (level==0) box_l0()    
%%%    else if (level==1) box_l1()
%%%    else if (level==2) box_l2()
%%%    Lx = XS*rx
%%%    Ly = YS*ry
%%%    Lz = ZS*rz
%%% }

# ranks in X, Z and Z
=level

=rx
box()
rx

=ry
box()
ry

=rz
box()
rz

=Lx
box()
Lx

=Ly
box()
Ly

=Lz
box()
Lz

########### cell placement parameters ##########
=reff
=sc

=ha # body force

=Nv # number of pariticles in the membrain

########## DPD parameters ##########
=nd

=kBT

=gammadpd

=aij

=dt

=np
rx*ry*rz

=totArea0
init()
totArea0

=totVolume0
totVolume0

########## RBC parameters ##########
=kb
=ka
=kv
=mu0

=cshape

=phirbc # spontaneous angle; (3.21) in Fedosov2010
todeg(acos((sqrt(3)*(Nv-2)-5*pi()) / (sqrt(3)*(Nv-2)-3*pi())))

=lmax
init()
lmax

=p
init()
p

=cq
init()
cq

=gammaC
=seed

#### box ####
=XS

=YS

=ZS

